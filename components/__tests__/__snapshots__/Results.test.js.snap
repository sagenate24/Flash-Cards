// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Results snapShot 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "backgroundColor": "#fff",
      "flex": 1,
      "paddingLeft": 20,
      "paddingRight": 20,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "paddingBottom": 50,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 50,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#404040",
          "fontSize": 26,
          "fontWeight": "bold",
          "justifyContent": "flex-start",
          "paddingBottom": 30,
        }
      }
    >
      Your Score
    </Text>
    <View
      style={undefined}
    >
      <RNSVGSvgView
        bbHeight="130"
        bbWidth="130"
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "backgroundColor": "transparent",
            },
            false,
            Object {
              "flex": 0,
              "height": 130,
              "width": 130,
            },
          ]
        }
      >
        <RNSVGGroup
          fill={
            Array [
              0,
              0,
              0,
              0,
              1,
            ]
          }
          fillOpacity={1}
          fillRule={1}
          font={Object {}}
          matrix={
            Array [
              -0.3826834323650895,
              -0.9238795325112868,
              0.9238795325112868,
              -0.3826834323650895,
              29.822253490497175,
              149.92659271696448,
            ]
          }
          onLayout={undefined}
          opacity={1}
          originX={65}
          originY={65}
          propList={Array []}
          rotation={247.5}
          scaleX={1}
          scaleY={1}
          skewX={0}
          skewY={0}
          stroke={null}
          strokeDasharray={null}
          strokeDashoffset={null}
          strokeLinecap={0}
          strokeLinejoin={0}
          strokeMiterlimit={4}
          strokeOpacity={1}
          strokeWidth="1"
          x={0}
          y={0}
        >
          <RNSVGPath
            d="M 20.823184594520406 109.21152542754186 A 62.5 62.5 0 1 0 65 2.5"
            fill={
              Array [
                0,
                0,
                0,
                0,
                0,
              ]
            }
            fillOpacity={1}
            fillRule={1}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            onLayout={undefined}
            opacity={1}
            originX={0}
            originY={0}
            propList={
              Array [
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "fill",
              ]
            }
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={
              Array [
                0,
                0.9490196078431372,
                0.9490196078431372,
                0.9490196078431372,
                1,
              ]
            }
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={1}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth="5"
            x={0}
            y={0}
          />
          <RNSVGPath
            d="M 65 2.5 A 62.5 62.5 0 0 0 65 2.5"
            fill={
              Array [
                0,
                0,
                0,
                0,
                0,
              ]
            }
            fillOpacity={1}
            fillRule={1}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                0,
                0,
              ]
            }
            onLayout={undefined}
            opacity={1}
            originX={0}
            originY={0}
            propList={
              Array [
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "fill",
              ]
            }
            rotation={0}
            scaleX={1}
            scaleY={1}
            skewX={0}
            skewY={0}
            stroke={
              Array [
                0,
                0.8901960784313725,
                0.7098039215686275,
                0.0196078431372549,
                1,
              ]
            }
            strokeDasharray={null}
            strokeDashoffset={null}
            strokeLinecap={1}
            strokeLinejoin={0}
            strokeMiterlimit={4}
            strokeOpacity={1}
            strokeWidth="5"
            x={0}
            y={0}
          />
        </RNSVGGroup>
      </RNSVGSvgView>
      <View
        style={
          Object {
            "alignItems": "center",
            "borderRadius": 60,
            "height": 120,
            "justifyContent": "center",
            "left": 5,
            "position": "absolute",
            "top": 5,
            "width": 120,
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "fontSize": 34,
              },
              Object {
                "color": "#404040",
                "fontWeight": "bold",
              },
            ]
          }
        >
          50
          %
        </Text>
      </View>
    </View>
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "#404040",
            "fontSize": 34,
            "fontWeight": "bold",
          }
        }
      >
        Study Time
      </Text>
    </View>
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        You got 
        1
         out of 
        2
         correct.
      </Text>
    </View>
    <View
      style={
        Object {
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 10,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#e63946",
            "borderRadius": 0,
            "marginTop": 20,
            "opacity": 1,
            "padding": 10,
            "width": 200,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#fff",
              "fontSize": 22,
              "fontWeight": "bold",
              "textAlign": "center",
            }
          }
        >
          Retake
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "paddingLeft": 20,
          "paddingRight": 20,
          "paddingTop": 10,
        }
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#457b9d",
            "borderRadius": 0,
            "marginTop": 20,
            "opacity": 1,
            "padding": 10,
            "width": 200,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "color": "#fff",
              "fontSize": 22,
              "fontWeight": "bold",
              "textAlign": "center",
            }
          }
        >
          Study more
        </Text>
      </View>
    </View>
  </View>
</View>
`;
